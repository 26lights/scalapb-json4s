// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package test.test



sealed trait MyEnum extends com.trueaccord.scalapb.GeneratedEnum {
  type EnumType = MyEnum
  def isUnknown: Boolean = false
  def isV1: Boolean = false
  def isV2: Boolean = false
  def isUnrecognized: Boolean = false
  def companion: com.trueaccord.scalapb.GeneratedEnumCompanion[MyEnum] = MyEnum
}

object MyEnum extends com.trueaccord.scalapb.GeneratedEnumCompanion[MyEnum] {
  implicit def enumCompanion: com.trueaccord.scalapb.GeneratedEnumCompanion[MyEnum] = this
  @SerialVersionUID(0L)
  case object UNKNOWN extends MyEnum {
    val value = 0
    val index = 0
    val name = "UNKNOWN"
    override def isUnknown: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object V1 extends MyEnum {
    val value = 1
    val index = 1
    val name = "V1"
    override def isV1: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object V2 extends MyEnum {
    val value = 2
    val index = 2
    val name = "V2"
    override def isV2: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case class Unrecognized(value: Int) extends MyEnum {
    val name = "UNRECOGNIZED"
    val index = -1
    override def isUnrecognized: Boolean = true
  }
  
  lazy val values = scala.collection.Seq(UNKNOWN, V1, V2)
  def fromValue(value: Int): MyEnum = value match {
    case 0 => UNKNOWN
    case 1 => V1
    case 2 => V2
    case __other => Unrecognized(__other)
  }
  def descriptor: com.google.protobuf.Descriptors.EnumDescriptor = TestProto.descriptor.getEnumTypes.get(0)
}